Index: financial-system/kfs/branches/mod-hlo/work/src/edu/arizona/kfs/pdp/batch/AchBankInputFileType.java
===================================================================
--- financial-system/kfs/branches/mod-hlo/work/src/edu/arizona/kfs/pdp/batch/AchBankInputFileType.java	(revision 10965)
+++ financial-system/kfs/branches/mod-hlo/work/src/edu/arizona/kfs/pdp/batch/AchBankInputFileType.java	(revision 10966)
@@ -30,6 +30,7 @@
 
 import org.apache.commons.lang.StringUtils;
 import org.apache.log4j.Logger;
+import org.kuali.kfs.pdp.PdpPropertyConstants;
 import org.kuali.kfs.pdp.businessobject.ACHBank;
 import org.kuali.kfs.sys.Message;
 import org.kuali.kfs.sys.batch.BatchInputFileTypeBase;
@@ -214,7 +215,7 @@
     private ACHBank getAchBank(String bankRoutingNumber) {
                 
         Map<String, String> pkMap = new HashMap<String, String>();
-        pkMap.put("bankRoutingNumber", bankRoutingNumber);
+        pkMap.put(PdpPropertyConstants.BANK_ROUTING_NUMBER, bankRoutingNumber);
         ACHBank bank = (ACHBank) businessObjectService.findByPrimaryKey(ACHBank.class, pkMap);
         
         return bank;
@@ -244,12 +245,12 @@
         String bankInstitutionStatusCd = bank.getBankInstitutionStatusCode();
         String bankDataViewCd = bank.getBankDataViewCode();
         List<String> validOfficeCodes = new ArrayList<String>();
-        validOfficeCodes.add("O");
-        validOfficeCodes.add("B");
+        validOfficeCodes.add(AZKFSConstants.ACHBankOfficeCodes.MAIN);
+        validOfficeCodes.add(AZKFSConstants.ACHBankOfficeCodes.BRANCH);
         List<String> validTypeCodes = new ArrayList<String>();
-        validTypeCodes.add("0");
-        validTypeCodes.add("1");
-        validTypeCodes.add("2");
+        validTypeCodes.add(AZKFSConstants.ACHBankTypeCodes.FEDERAL_RESERVE);
+        validTypeCodes.add(AZKFSConstants.ACHBankTypeCodes.CUSTOMER_ROUTING_NBR);
+        validTypeCodes.add(AZKFSConstants.ACHBankTypeCodes.NEW_CUSTOMER_ROUTING_NBR);
         
         // check customer name, return false if not present
         if (StringUtils.isBlank(bankNm)) {
@@ -266,20 +267,20 @@
         
         // check record type code
         if (StringUtils.isBlank(bankTypeCd)) {    // if no record type code
-            bank.setBankTypeCode("0");
+            bank.setBankTypeCode(AZKFSConstants.ACHBankTypeCodes.FEDERAL_RESERVE);
         }
         else if (!validTypeCodes.contains(bankTypeCd)) {    // if an invalid code
-            bank.setBankTypeCode("0");
+            bank.setBankTypeCode(AZKFSConstants.ACHBankTypeCodes.FEDERAL_RESERVE);
             reportLines.add(new BankReportLine(bankRoutingNbr, bankNm, AZKFSConstants.ACHFileConstants.ACH_BANK_INVALID_TYP_CD_ERROR));
         }
-        else if (bankTypeCd.equals("2") && (StringUtils.isBlank(bankNewRoutingNbr))) {    // if no new routing number
+        else if (bankTypeCd.equals(AZKFSConstants.ACHBankTypeCodes.NEW_CUSTOMER_ROUTING_NBR) && (StringUtils.isBlank(bankNewRoutingNbr))) {    // if no new routing number
             reportLines.add(new BankReportLine(bankRoutingNbr, bankNm, AZKFSConstants.ACHFileConstants.ACH_BANK_TYP_CD_ROUTING_NBR_ERROR));
             return false;
         }
         
         // check office code
         if (StringUtils.isBlank(bankOfficeCd) || !validOfficeCodes.contains(bankOfficeCd)) {
-            bank.setBankOfficeCode("O");
+            bank.setBankOfficeCode(AZKFSConstants.ACHBankOfficeCodes.MAIN);
             reportLines.add(new BankReportLine(bankRoutingNbr, bankNm, AZKFSConstants.ACHFileConstants.ACH_BANK_INVALID_OFFICE_CD_ERROR));
         }
                 
